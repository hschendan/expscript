
***************************
				*		          *	
				*   Instruction v.11      *
				*			  *
				***************************
---------------------------
* before run 'std_MAIN.m' *
---------------------------

Please do the following (make your own note if anything is missing here):

1. install MATLAB2015a
2. install EEGLab v13.5.4b (recommed not to save in toolbox, but in 'my documents')
3. install ERPLab (latest version -not tested yet but should work or v5.1.1.0 - tested with script): save in EEGLab 'plugins' folder
4. install BIOSIG v3.0.3 (or v3.0.7???) (http://sccn.ucsd.edu/wiki/EEGLAB_Plugins, save in EEGLab 'plugins')
5. have the following 3 files ready in a  folder named '3Files': 
	- 'bdf.txt', 
	- 'biosemi64xyz10-20.xyz',  
	- 'garvparm.txt'
6. download and save all the scripts into one folder (e.g. standard10).
7. have raw EEG data (.bdf) ready somewhere. 
8. Run Matlab. If first time running eeglab, Browse to and select eeglab directory (e.g., Documents/MATLAB/eeglab13_5_4b), type eeglab in Matlab command window, which will set paths. To save paths, click the following on the panel:
	'Set Path'==> 'Add Folder' ==>  'eeglab13_5_4b' (if eeglab not showing in path)
                  ==> 'Add Folder' ==>  'standard10' (find yours)   
		  ==> 'save'
9. modifications are needed in the following functions:
   	(1) 'MAIN.m' 
		-- 'diary' (pathname)
		-- Optional: Change order of steps by changing order of module calls 
   	(2) 'flags.m'  
		-- 'expname'
		-- 'pathname_all' (*very important to keep the last '\')
		-- 'pathname_raw'(*very important to keep the last '\')
		-- allbins = 174;  % Modify for your experiment: total # bins in bin descriptor file (bdf.txt command file).  
		-- file1 = 'biosemi64xyz10-20.xyz'; % Modify for your experiment: 64 or 32 channel location file
		-- file2 = 'garvparm.txt'; Modify for your experiment, default parameters for garv [soon to be obsolete]
		-- file3 = 'erpfiles.txt'; Modify for your experiment, subject .erp files to include in grand average gavg and to measure meas
  	(3) 'os_paraset.m' (old versions: and/or 'paraset.m'): 
		-- 'expression'
		-- 'source' (pathname)
   	(4) 'artif_CreateFiles.m'
		-- 'fidIn'
	(5) 'artif_one.m'
		-- 'n' (the subject number you want to run for artifact detection on ONE subject at a time)
	(6) 'artif_all.m'
		-- 's' (the subject numbers, e.g., [1 2 3 4 ] you want to run for artifact detection on ALL subjects). 
		You can copy what you need from this: 
		[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
        (7) 'import.m', 'elist.m', 'binlis.m', 'chanloc.m', 'epoch.m', 'addeye.m','artif_T.m', 'eegrefch.m', 
                -- 'sfx' %initial suffix (from previous steps already run, e.g., sfx = '_e' means import and elist done; for				input file name)
		-- 'x' % add (e.g., x = 'b') to suffix; please modify the definition of x (e.g., 'b') yourself; this is for output file name

10. set up all flag values in 'flags.m'

------------------------
* Run std_MAIN.m *
------------------------

In matlab command window, type: std_MAIN <enter>

------------------------
* After run std_MAIN.m *
------------------------

it will:

1. clear the Workspace, clear the screen, display 'Setting up...'
2. Save Command Window output text to a created file specified by you (see MAIN.m)
3. According to the flags set by you to run selected functions

if os is Windows, automatically do the following:   
- create 7 folders: 'CMD', 'EEG-ANAL', 'Measure', 'Grand', 'BEH-ANAL', 'RT', 'BLO' to the specified path
- copy 3 files from source folder to 'CMD' folder
- create erpfiles.txt to  'CMD' folder
- optional to copy raw .bdf data to EEG-DATA-COPY foler
- Read list of raw files from raw file directory, and sort the order
- create subfolders for each subject in 'EEG-ANAL', and import the raw data.
- create std_artif_S* (artifact detection function) for each subject, then you can modify manually
- call the std_artif_s* for each subject after your modification
- save all steps into subfolder 'EEG-ANAL' for each subject
- save the RT output files (.txt & .xls) in '.../BEH-ANAL/RT'
- save the blinister .txt output files in '.../BEH-ANAL/BLO'
- optional to Common average reference (CAR)
- optional to do std_artif_all, i.e. run all the artif_artif_S** in one go.
- std_artif_one will allow you to change the value 'n' to run the single subject at a time.

4. simplify the original program in the way that repeatedly used variables in functions are set to be global and only need to modify once.
5. after each function, a suffix (sfx) will be added to the saved file names as the following:
	- 'e' for elist
	- 'b' for blins
	- 'c' for chanloc
	- 'p' for epoch
	- 'y' for addeye
	- 'a' for artif
	- 'aM' for eegrefch (default reference is average of left mastoid [M1] and right mastoid [M2])
	- 'ca' for common average reference (for EEGs)

	- '_ar' for reject the artifacts (for ERPs)
	- '_al' for all trials (for ERPs)
	- '_ba' for bad trials with artifacts (for ERPs)
	- '_ae' for reject artifacts and EFFT (for ERPs)

	- 'mM' for erprefch, reference to mean of M1 and M2 (mean mastoids); note, aM = mM (never do both)
	- 'CA`' for common average reference (for ERPs); note, ca = CA, never do both

------------------------
* Please note *
------------------------
1. need to run 'os_paraset.m'once before import. os_paraset.m  will create erpfiles.txt with _ar.erp filenames. erpfiles.txt is input to meas, gavg. Save a copy so this does not get over-written when script re-run. Need to modify erpfiles.txt  for later steps (meas, gavg, to measure, grandaverage rereferenced M12 (STANDARD) or if you want to measure filtered .erp files instead of unfiltered (change filenames to , as default erpfiles.txt is unfiltered)
2. need to run 'import.m' once.
3. erpfiles.txt .erp filename list; default is armM (artifacts rejected referenced to M12) for meas and gavg; copy when created and save elsewhere so not overwritten; need to modify if input is filtered or CAR for meas or gavg
4. erprefch.m uses ERPref64M12.txt default is 64 cap ch referenced to mean mastoids M12; re-reference command file

-----------
*   AoB   *
-----------
-- sfx is changed from global var to local var.s
-- combined 'os.m' & 'parset.m' into 'os_paraset.m'
-- suffix in epoch.m is changed from 'e' to 'p' due to the same as in 'elist.m'
-- It will take more than 8 hours to run the whole batch of Color data when error free.
-- if apply the script on other dataset, replace all 'std' by your 'expname', e.g. 'color'
-- original RTlock is removed
-- occasionally 'importing' function is not working properly when reading raw EEG data into .fdt and .set format. The size of the generated file is much smaller than it should be. You will get error message when executing 'elist'. If this happens, delete the .fdt and .set files of this subject and run the import.m again.


--------------------------------------------------------------------------------------------------------------------------------
*	ORDER OF STEPS TO RUN SCRIPT	*
Standard processing stream order: Use this order in MAIN, otherwise script will not yield correct output files. Script is programmed to run modular so that only the remaining steps to do can be run from any point (e.g., you ran import and event list, and now you run binlister onwards; you ran everything but want to use a different epoch so run from epoch onwards again).

EEG: These steps must be run on the EEG data in this order.
1. Import	import.m					output suffix:	sfx = '_' (analogous to x in later steps)
2. Event list	elist.m		input suffix: 	sfx = '_'	output suffix:	x = 'e'
3. Binlister	binlis.m	input suffix: 	sfx = '_e'	output suffix:	x = 'b'
4. Chanloc	chanloc.m	input suffix: 	sfx = '_eb'	output suffix:	x = 'c'
5. Epoch	epoch.m		input suffix: 	sfx = '_ebc'	output suffix:	x = 'p'
6. Addeye	addeye.m	input suffix: 	sfx = '_ebcp'	output suffix:	x = 'y'
7. Create artif	artif.m	Create std_artif_T.m, where T = subject number, for each subject.
END STAGE 1 SCRIPT

1st time script run, go directly to stage 2. 2nd time script run, GARV between stage 1 and 2
8. Run std_artif_T.m, where T = subject number, for each subject (GARV: get artefact rejection value parameters and enter in the std_artif_T.m file for each subject). NOTE: Currently std_artif_T.m marks EEG with artifacts using garv parameters from artif step so if this is already run for each subject separately, then skip artif_all.m
TIP:
% GARV: when running artif_one, add single line artifact detection functions after default artparm lines above. 
% Also add these 3 lines to artif for each subject
% before: EEG.setname= [subject{s} sfx x]; to plot EEG, pause to scroll EEG, before save
% Uncomment the 2 lines to run; comment out to not run
        pop_eegplot( EEG, 1, 1, 1); 
        fprintf('\n+++++++++++++++\n+ Hit return to save or Ctrl-c to quit and try again with new threshold ... \n+++++++++++++++\n\n', sfx);
        pause();    % Pause to scroll EEG plot
% delete above 3 lines when all parms done, to run artif_all


START STAGE 2 SCRIPT
9. Artif all (Optional: only need to run if you need to mark EEG artifacts for all subjects. Marks EEG with artifacts using garv parameters from artif step. OK to run twice (first for std_artif_T.m and second here) so default flag = 1)
10. Avg 	avg.m	(input is *ar.set and output is .erp average file and erpfiles.txt): 

ERP: These operate on .erp average files (not raw EEG)
11. erpreref (Rereference ERP)
12. Measure	meas.m (input: erpfiles.txt (all .erp files: can modify erpfiles.txt to exclude subjects))
13. Grand average	gavg.m (input: erpfiles.txt (all .erp files: can modify erpfiles.txt to exclude subjects))



OPTIONS: 

RE-REFERENCE EEG DATA (*.set):
eegreref (Default flag = 0; (marks EEG with artifacts using garv parameters from artif step). Important: Never run for standard ERP stream, but for other reasons, only run after Artif all. Used only for EEGLab processes of artefact detection, ICA artefact detection or EEG frequency analysis, then eegreref after Artif_all, and do NOT rereference again using erpreref.)

* NOT IMPLEMENTED *
FILTER:
ERP: These operate on .erp average files (not raw EEG)
Filter (before Measure then do separate Measure on filtered data)

******* CRITICAL INFO FOR GARV BELOW ************
****** artif_one ***************
lines to choose to add for single subject GARV:
EEG = pop_artextval( EEG, 'Channel', [1], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [2], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [3], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [4], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [5], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [6], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [7], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [8:10], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [11:20], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [21:30], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [31:32], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [33], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [34], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [35], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [36], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [37], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [38], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [39], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [40], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [41], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [42], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [43:50], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [51:60], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [61:64], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [65:66], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [67], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [68:69], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [70], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold
EEG = pop_artextval( EEG, 'Channel', [71], 'Flag',  2, 'Review', 'off', 'Threshold', [-125 125], 'Twindow', [-200 900]); %Voltage threshold

EEG = pop_artstep( EEG , 'Channel', [1], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [2], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [3], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [4], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [5], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [6], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [7], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [8:10], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [11:20], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [21:30], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [31:32], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [33], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [34], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [35], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [36], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [37], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [38], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [39], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [40], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [41], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [42], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [43:50], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [51:60], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [61:64], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [65:66], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [67], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [68:69], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [70], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts
EEG = pop_artstep( EEG , 'Channel', [71], 'Flag', 5, 'Review', 'off', 'Threshold',  50, 'Twindow', [ -200 900], 'Windowsize',  400, 'Windowstep',  10 ); % step-like artifacts

EEG = pop_artmwppth( EEG , 'Channel',  [1], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [2], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [3], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [4], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [5], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [6], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [7], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [8:10], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [11:20], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [21:30], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [31:32], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [33], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [34], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [35], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [36], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [37], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [38], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [39], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [40], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [41], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [42], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [43:50], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [51:60], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [61:64], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [65:66], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [67], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [68:69], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [70], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P
EEG = pop_artmwppth( EEG , 'Channel',  [71], 'Flag',  6, 'Review', 'off', 'Threshold', 150, 'Twindow', [ -200 900], 'Windowsize',  200, 'Windowstep',  50 ); % P2P

EEG = pop_artdiff( EEG , 'Channel',  [1], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [2], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [3], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [4], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [5], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [6], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [7], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [8:10], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [11:20], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [21:30], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [31:32], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [33], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [34], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [35], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [36], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [37], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [38], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [39], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [40], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [41], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [42], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [43:50], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [51:60], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [61:64], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle
EEG = pop_artdiff( EEG , 'Channel',  [68:69], 'Flag',  8, 'Review', 'off', 'Threshold',  100, 'Twindow', [ -200 900] ); %Extreme spikiness, eg. muscle


